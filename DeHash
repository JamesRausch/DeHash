import java.security.NoSuchAlgorithmException;
import java.security.MessageDigest;
import java.util.Scanner;
public class DeHash extends Thread implements Runnable{

    private String hashed;
    private MessageDigest messageDigest;

    private boolean isDone = false;
    private String hold = "";

    DeHash() {
        Scanner input = new Scanner(System.in);

        if (hashed == null){
            System.out.println("Please Enter The Hashed Value:");
            hashed = input.nextLine();
              }
        try {
            messageDigest = MessageDigest.getInstance("SHA-256");

            String temporary = "1234";
            messageDigest.update(temporary.getBytes());


        }
        catch(NoSuchAlgorithmException e){
            e.printStackTrace();
        }
    }
    private void checker(String tString){
        if(tString != null)
        messageDigest.update(tString.getBytes());
        String sString = new String(messageDigest.digest());
        if(sString.equals(hashed)){
            isDone = true;
            System.out.println(hold);
        }
    }

    private char[] alphabet = new char[]{'0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'};


    private void generator(String temp)
    {

            if(isDone) {
                System.out.println(hold);
                System.out.println("Has been Cracked");
            }else {
                    for (int i = 0; i < alphabet.length; i++) {

                        hold = temp;
                        temp += alphabet[i];
                        System.out.println(temp);
                        if(temp.length() > 1) {
                            checker(temp);
                        }

                       generator(temp);
                        temp = hold;
                    }
                }


    }
    private DeHash(String input){
    }
    public void run() {
            try {

                DeHash x1 = new DeHash("");
               DeHash x2 = new DeHash("");
                x1.generator(hold);
               x2.generator(hold + "");
                Thread threadX1 = new Thread(x1);
               Thread threadX2 = new Thread(x2);
                threadX1.start();
                threadX2.start();
                threadX1.join();
                threadX2.join();


            } catch (InterruptedException ex) {
                ex.printStackTrace();
            }


        }


    public static void main(String[] args) {

        DeHash u = new DeHash();
        u.start();


    }

}

